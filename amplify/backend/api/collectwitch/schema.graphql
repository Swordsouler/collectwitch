type Universe @model @auth(rules: [{ allow: public }]) {
    id: ID!
    cards: [Card] @hasMany(indexName: "byUniverse", fields: ["id"])
    name: String!
    icon: AWSURL
}

type Card @model @auth(rules: [{ allow: public }]) {
    id: ID!
    name: String!
    state: String!
    cover: AWSURL
    color1: String
    color2: String
    rarity: Rarity
    releaseWave: Int!
    available: Boolean!
    universeID: ID! @index(name: "byUniverse")
    cards: [UserCard] @hasMany(indexName: "byCard", fields: ["id"])
}

type UserCard @model @auth(rules: [{ allow: public }]) {
    id: ID!
    userID: String!
        @index(
            name: "userCardsByDate"
            queryField: "userCardsByDate"
            sortKeyFields: ["createdAt"]
        )
    card: Card! @belongsTo(fields: ["cardID"])
    cardID: ID! @index(name: "byCard")
    channelID: String!
    createdAt: String!
}

type User @model @auth(rules: [{ allow: public }]) {
    twitchID: String! @primaryKey
    username: String!
    streamer: Boolean!
}

enum Rarity {
    COMMON
    RARE
    EPIC
    LEGENDARY
    EXCLUSIVE
}
